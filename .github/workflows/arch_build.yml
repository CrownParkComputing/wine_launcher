name: Build Arch Package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container: 
      image: archlinux:base-devel

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install dependencies
      run: |
        pacman -Syu --noconfirm
        pacman -S --noconfirm git base-devel sudo curl unzip xz
        # Install Flutter directly
        curl -O https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.19.3-stable.tar.xz
        tar xf flutter_linux_3.19.3-stable.tar.xz -C /opt
        ln -s /opt/flutter/bin/flutter /usr/local/bin/flutter
        ln -s /opt/flutter/bin/dart /usr/local/bin/dart
        # Fix git ownership issue
        git config --global --add safe.directory /opt/flutter
        git config --global --add safe.directory '*'
        # Configure git pull strategy
        git config --global pull.rebase false
        # Set permissions
        chmod -R a+rw /opt/flutter
        # Install dependencies for Flutter
        pacman -S --noconfirm clang cmake ninja gtk3 pkgconf

    - name: Setup Flutter
      run: |
        export PATH="/opt/flutter/bin:$PATH"
        flutter config --no-analytics
        # Initialize Flutter
        cd /opt/flutter
        git checkout stable
        git pull origin stable --no-rebase
        flutter precache
        cd -
        flutter doctor
        flutter config --enable-linux-desktop

    - name: Get latest version tag
      id: get_version
      run: |
        LATEST_TAG=$(git ls-remote --tags origin | sort -t '/' -k 3 -V | tail -n1 | awk -F/ '{print $3}' | sed 's/\^{}//g')
        if [ -z "$LATEST_TAG" ]; then
            LATEST_TAG="v0.0.0"
        fi
        echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
        VERSION_PARTS=(${LATEST_TAG//[v.]/ })
        NEW_VERSION="v${VERSION_PARTS[0]:-0}.${VERSION_PARTS[1]:-0}.$((${VERSION_PARTS[2]:-0} + 1))"
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

    - name: Build project
      run: |
        export PATH="/opt/flutter/bin:$PATH"
        flutter pub get
        flutter build linux --release

    - name: Create PKGBUILD
      run: |
        cat > PKGBUILD << 'EOF'
        # Maintainer: Your Name <your.email@example.com>
        pkgname=wine-launcher
        pkgver=${NEW_VERSION#v}
        pkgrel=1
        pkgdesc="Wine Launcher Application"
        arch=('x86_64')
        url="https://github.com/CrownParkComputing/wine_launcher"
        license=('MIT')
        depends=('flutter')
        makedepends=('git')

        package() {
          mkdir -p "$pkgdir/usr/lib/$pkgname"
          cp -r build/linux/x64/release/bundle/* "$pkgdir/usr/lib/$pkgname/"
          
          mkdir -p "$pkgdir/usr/bin"
          echo '#!/bin/sh' > "$pkgdir/usr/bin/$pkgname"
          echo "exec /usr/lib/$pkgname/wine_launcher \"\$@\"" >> "$pkgdir/usr/bin/$pkgname"
          chmod +x "$pkgdir/usr/bin/$pkgname"
        }
        EOF

    - name: Build package
      run: |
        makepkg -f

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: wine-launcher-arch
        path: ./*.pkg.tar.zst

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.NEW_VERSION }}
        name: Release ${{ env.NEW_VERSION }}
        draft: false
        prerelease: false
        files: |
          *.pkg.tar.zst
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 