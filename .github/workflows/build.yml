name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - distro: ubuntu-latest
            package: deb
          - distro: fedora-latest
            package: rpm
          - distro: archlinux:latest
            package: pkg.tar.zst

    container:
      image: ${{ matrix.distro }}

    steps:
      - uses: actions/checkout@v3
      
      - name: Install dependencies
        run: |
          if [ "${{ matrix.distro }}" = "ubuntu-latest" ]; then
            apt-get update && apt-get install -y curl git cmake ninja-build clang pkg-config libgtk-3-dev
          elif [ "${{ matrix.distro }}" = "fedora-latest" ]; then
            dnf install -y curl git cmake ninja-build clang pkg-config gtk3-devel
          else
            pacman -Syu --noconfirm curl git cmake ninja clang pkg-config gtk3
          fi

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          
      - name: Install Flutter dependencies
        run: flutter pub get
        
      - name: Build Linux
        run: flutter build linux --release

      - name: Package Application
        run: |
          if [ "${{ matrix.package }}" = "deb" ]; then
            # Create DEB package
            mkdir -p debian/DEBIAN
            mkdir -p debian/usr/bin
            mkdir -p debian/usr/share/applications
            cp -r build/linux/x64/release/bundle/* debian/usr/bin/
            # Create desktop file and control file
            # Package using dpkg-deb
          elif [ "${{ matrix.package }}" = "rpm" ]; then
            # Create RPM package using rpmbuild
            # Setup spec file and build
          else
            # Create Arch package using makepkg
            # Setup PKGBUILD and build
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wine-launcher-${{ matrix.package }}
          path: |
            *.deb
            *.rpm
            *.pkg.tar.zst

  create-release:
    needs: build-linux
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - uses: actions/download-artifact@v3
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            wine-launcher-deb/*.deb
            wine-launcher-rpm/*.rpm
            wine-launcher-pkg.tar.zst/*.pkg.tar.zst
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 